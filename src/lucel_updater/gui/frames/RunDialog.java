/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lucel_updater.gui.frames;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

import lucel_updater.Lucel_Updater;

/**
 *
 * @author Shiva
 */
public class RunDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    private static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    private static final int RET_OK = 1;
    private static RunDialog instance;

    /**
     * @return the RET_CANCEL
     */
    public static int getRET_CANCEL() {
        return RET_CANCEL;
    }

    /**
     * @return the RET_OK
     */
    public static int getRET_OK() {
        return RET_OK;
    }

    /**
     * @return the instance
     */
    public static RunDialog getInstance() {
        return instance;
    }

    /**
     * @param aInstance the instance to set
     */
    public static void setInstance(RunDialog aInstance) {
        instance = aInstance;
    }
    /**
     * Creates new form RunDialog
     */
    public RunDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                doClose(getRET_CANCEL());
            }
        });
        this.instance = this;
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        cb_high = new javax.swing.JCheckBox();
        cb_nosplash = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cb_skipintro = new javax.swing.JCheckBox();
        cb_nologs = new javax.swing.JCheckBox();
        cb_enableht = new javax.swing.JCheckBox();
        cn_nobenchmark = new javax.swing.JCheckBox();
        cb_nopause = new javax.swing.JCheckBox();
        cb_mod = new javax.swing.JCheckBox();
        cb_connect = new javax.swing.JCheckBox();
        txt_connect = new javax.swing.JTextField();
        cb_password = new javax.swing.JCheckBox();
        txt_password = new javax.swing.JTextField();

        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("Run");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        cb_high.setSelected(true);
        cb_high.setText("-high");
        cb_high.setFocusable(false);
        cb_high.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_highActionPerformed(evt);
            }
        });

        cb_nosplash.setSelected(true);
        cb_nosplash.setText("-nosplash");
        cb_nosplash.setFocusable(false);

        jLabel1.setText("   Choose your launch parameters :");
        jLabel1.setFocusable(false);

        cb_skipintro.setSelected(true);
        cb_skipintro.setText("-skipintro");
        cb_skipintro.setFocusable(false);

        cb_nologs.setSelected(true);
        cb_nologs.setText("-nologs");
        cb_nologs.setFocusable(false);

        cb_enableht.setSelected(true);
        cb_enableht.setText("-enableHT");
        cb_enableht.setFocusable(false);

        cn_nobenchmark.setSelected(true);
        cn_nobenchmark.setText("-nobenchmark");
        cn_nobenchmark.setFocusable(false);

        cb_nopause.setSelected(true);
        cb_nopause.setText("-nopause");
        cb_nopause.setFocusable(false);

        cb_mod.setSelected(true);
        cb_mod.setText("-mod="+Lucel_Updater.getConfigValue("altisfr.foldername")+";");
        cb_mod.setEnabled(false);
        cb_mod.setFocusable(false);

        cb_connect.setText("-connect=");
        cb_connect.setFocusable(false);

        if(Lucel_Updater.config.containsKey("altisfr.ip")){
        	txt_connect.setText(Lucel_Updater.config.getProperty("altisfr.ip"));
        	cb_connect.setSelected(true);
        }
        else
        	txt_connect.setText("127.0.0.1");
        txt_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_connectActionPerformed(evt);
            }
        });

        cb_password.setText("-password=");
        cb_password.setFocusable(false);

        if(Lucel_Updater.config.containsKey("altisfr.password")){
        	txt_password.setText(Lucel_Updater.config.getProperty("altisfr.password"));
        	cb_password.setSelected(true);
        }
        else
        	txt_password.setText("pass");
        txt_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passwordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_nologs)
                            .addComponent(cb_enableht)
                            .addComponent(cb_high, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_nosplash)
                            .addComponent(cb_skipintro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_nopause)
                            .addComponent(cb_mod)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_connect)
                                    .addComponent(cb_password))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_connect)
                                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cn_nobenchmark))
                        .addGap(35, 35, 35))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_high, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_nopause, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_nosplash)
                    .addComponent(cn_nobenchmark))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_skipintro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_nologs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_enableht))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_mod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cb_connect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cb_password)
                                    .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txt_connect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(getRET_OK());
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(getRET_CANCEL());
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(getRET_CANCEL());
    }//GEN-LAST:event_closeDialog

    private void cb_highActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_highActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_highActionPerformed

    private void txt_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_connectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_connectActionPerformed

    private void txt_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_passwordActionPerformed
    
    private void doClose(int retStatus) {
        setReturnStatus(retStatus);
        setVisible(false);
        dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RunDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RunDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RunDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RunDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RunDialog dialog = new RunDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox cb_connect;
    private javax.swing.JCheckBox cb_enableht;
    private javax.swing.JCheckBox cb_high;
    private javax.swing.JCheckBox cb_mod;
    private javax.swing.JCheckBox cb_nologs;
    private javax.swing.JCheckBox cb_nopause;
    private javax.swing.JCheckBox cb_nosplash;
    private javax.swing.JCheckBox cb_password;
    private javax.swing.JCheckBox cb_skipintro;
    private javax.swing.JCheckBox cn_nobenchmark;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField txt_connect;
    private javax.swing.JTextField txt_password;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;

    /**
     * @return the cancelButton
     */
    public javax.swing.JButton getCancelButton() {
        return cancelButton;
    }

    /**
     * @param cancelButton the cancelButton to set
     */
    public void setCancelButton(javax.swing.JButton cancelButton) {
        this.cancelButton = cancelButton;
    }

    /**
     * @return the cb_connect
     */
    public javax.swing.JCheckBox getCb_connect() {
        return cb_connect;
    }

    /**
     * @param cb_connect the cb_connect to set
     */
    public void setCb_connect(javax.swing.JCheckBox cb_connect) {
        this.cb_connect = cb_connect;
    }

    /**
     * @return the cb_enableht
     */
    public javax.swing.JCheckBox getCb_enableht() {
        return cb_enableht;
    }

    /**
     * @param cb_enableht the cb_enableht to set
     */
    public void setCb_enableht(javax.swing.JCheckBox cb_enableht) {
        this.cb_enableht = cb_enableht;
    }

    /**
     * @return the cb_high
     */
    public javax.swing.JCheckBox getCb_high() {
        return cb_high;
    }

    /**
     * @param cb_high the cb_high to set
     */
    public void setCb_high(javax.swing.JCheckBox cb_high) {
        this.cb_high = cb_high;
    }

    /**
     * @return the cb_mod
     */
    public javax.swing.JCheckBox getCb_mod() {
        return cb_mod;
    }

    /**
     * @param cb_mod the cb_mod to set
     */
    public void setCb_mod(javax.swing.JCheckBox cb_mod) {
        this.cb_mod = cb_mod;
    }

    /**
     * @return the cb_nologs
     */
    public javax.swing.JCheckBox getCb_nologs() {
        return cb_nologs;
    }

    /**
     * @param cb_nologs the cb_nologs to set
     */
    public void setCb_nologs(javax.swing.JCheckBox cb_nologs) {
        this.cb_nologs = cb_nologs;
    }

    /**
     * @return the cb_nopause
     */
    public javax.swing.JCheckBox getCb_nopause() {
        return cb_nopause;
    }

    /**
     * @param cb_nopause the cb_nopause to set
     */
    public void setCb_nopause(javax.swing.JCheckBox cb_nopause) {
        this.cb_nopause = cb_nopause;
    }

    /**
     * @return the cb_nosplash
     */
    public javax.swing.JCheckBox getCb_nosplash() {
        return cb_nosplash;
    }

    /**
     * @param cb_nosplash the cb_nosplash to set
     */
    public void setCb_nosplash(javax.swing.JCheckBox cb_nosplash) {
        this.cb_nosplash = cb_nosplash;
    }

    /**
     * @return the cb_password
     */
    public javax.swing.JCheckBox getCb_password() {
        return cb_password;
    }

    /**
     * @param cb_password the cb_password to set
     */
    public void setCb_password(javax.swing.JCheckBox cb_password) {
        this.cb_password = cb_password;
    }

    /**
     * @return the cb_skipintro
     */
    public javax.swing.JCheckBox getCb_skipintro() {
        return cb_skipintro;
    }

    /**
     * @param cb_skipintro the cb_skipintro to set
     */
    public void setCb_skipintro(javax.swing.JCheckBox cb_skipintro) {
        this.cb_skipintro = cb_skipintro;
    }

    /**
     * @return the cn_nobenchmark
     */
    public javax.swing.JCheckBox getCn_nobenchmark() {
        return cn_nobenchmark;
    }

    /**
     * @param cn_nobenchmark the cn_nobenchmark to set
     */
    public void setCn_nobenchmark(javax.swing.JCheckBox cn_nobenchmark) {
        this.cn_nobenchmark = cn_nobenchmark;
    }

    /**
     * @return the jLabel1
     */
    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    /**
     * @return the jTextField1
     */
    public javax.swing.JTextField getjTextField1() {
        return getTxt_connect();
    }

    /**
     * @param jTextField1 the jTextField1 to set
     */
    public void setjTextField1(javax.swing.JTextField jTextField1) {
        this.setTxt_connect(jTextField1);
    }

    /**
     * @return the jTextField2
     */
    public javax.swing.JTextField getjTextField2() {
        return getTxt_password();
    }

    /**
     * @param jTextField2 the jTextField2 to set
     */
    public void setjTextField2(javax.swing.JTextField jTextField2) {
        this.setTxt_password(jTextField2);
    }

    /**
     * @return the okButton
     */
    public javax.swing.JButton getOkButton() {
        return okButton;
    }

    /**
     * @param okButton the okButton to set
     */
    public void setOkButton(javax.swing.JButton okButton) {
        this.okButton = okButton;
    }

    /**
     * @param returnStatus the returnStatus to set
     */
    public void setReturnStatus(int returnStatus) {
        this.returnStatus = returnStatus;
    }

    /**
     * @return the txt_connect
     */
    public javax.swing.JTextField getTxt_connect() {
        return txt_connect;
    }

    /**
     * @param txt_connect the txt_connect to set
     */
    public void setTxt_connect(javax.swing.JTextField txt_connect) {
        this.txt_connect = txt_connect;
    }

    /**
     * @return the txt_password
     */
    public javax.swing.JTextField getTxt_password() {
        return txt_password;
    }

    /**
     * @param txt_password the txt_password to set
     */
    public void setTxt_password(javax.swing.JTextField txt_password) {
        this.txt_password = txt_password;
    }
}
